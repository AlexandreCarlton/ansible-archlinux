---

# If lvm2 sneaks onto our machine (via something that requires it as a
# dependency, e.g. udisks) then several services will be enabled automatically.
- name: Mask lvm services.
  systemd:
    name: "{{ item }}"
    masked: yes
  with_items:
    - lvm2-lvmetad.socket
    - lvm2-lvmpolld.socket
    - lvm2-monitor.service

# genfstab supplies the subvol= and subvolid= mount options.
# These are set to  btrfs_root_subvolume.
# We instead want to delegate to the current default subvolume, so that snapper
# rollback setting the default actually boots us into a different subvolume.
# TODO: Make this more robust; this is only guaranteed by looking at the generated /etc/fstab.
- name: Remove subvol entry in root fstab to allow default subvolume to be mounted.
  replace:
    path: /etc/fstab
    regexp: "(.*),subvolid=.*,subvol=/{{ btrfs_root_subvolume }},subvol={{ btrfs_root_subvolume }}(.*)"
    replace: '\1\2'

- name: Run check to see if /home/{{ user_name }} is a btrfs subvolume.
  command: stat --format=%i /home/{{ user_name }}
  register: home_stat

- block:
    - name: Ensure /home/{{ user_name }}.tmp is absent
      file:
        path: "/home/{{ user_name }}.tmp"
        state: absent

    # Ansible sticks everything in /home/<user>/.ansible, so if we lose this in between steps then we're hosed.
    - name: Convert /home/{{ user_name }}  to a btrfs subvolume
      shell: |
        mv "/home/{{ user_name }}" "/home/{{ user_name }}.tmp"
        btrfs subvolume create "/home/{{ user_name }}"
        # We set open permissions to allow Ansible to access /home/<user>/.ansible without issue.
        chmod a+rwx "/home/{{ user_name }}"
        cp -r /home/{{ user_name }}.tmp/* "/home/{{ user_name }}"
        exit 0

    - name: Set permissions of /home/{{ user_name }}
      file:
        path: "/home/{{ user_name }}"
        owner: "{{ user_name }}"
        mode: 0700

    - name: Destroy leftover /home/{{ user_name }}.tmp
        path: "/home/{{ user_name }}.tmp"
        state: absent

  when: home_stat.stdout != 256

- name: Install snapper to manage btrfs snapshots.
  pacman:
    name: snapper

- name: Create root snapper configuration.
  command: snapper -c root create-config /
  args:
    creates: /etc/snapper/configs/root

- name: Mount root snapshot subvolume at boot.
  mount:
    fstype: btrfs
    path: /.snapshots
    opts: "subvol={{ btrfs_root_subvolume }}/.snapshots"
    src: "{{ btrfs_root_device }}"
    state: present

- name: Create home_{{ user_name }} snapper configuration.
  command: snapper -c home_{{ user_name }} create-config /home/{{ user_name }}
  args:
    creates: /etc/snapper/configs/home_{{ user_name }}

# If we rollback even once then our default subvolume changes to a snapshot.
# This means that the root subvolume won't be mounted by default and with it the home subvolume.
# We thus explicitly mount the home subvolume
- name: Mount /home/{{ user_name }} subvolume at boot.
  mount:
    fstype: btrfs
    path: "/home/{{ user_name }}"
    opts: "subvol={{ btrfs_root_subvolume }}/home/{{ user_name }}"
    src: "{{ btrfs_root_device }}"
    state: present

# We won't rollback the subvolume (since we cannot set-default for a particular path, only /),
# so we only mount /home/<user> and not /home/<user>/.snapshots

- name: Allow user {{ user_name }} to manage home_{{ user_name }} snapper configuration.
  lineinfile:
    path: /etc/snapper/configs/home_{{ user_name }}
    regexp: '^ALLOW_USERS='
    line: 'ALLOW_USERS="{{ user_name }}"'

# Normally pam_snapper is supposed to:
# - create a pre- and post- snapshot on login
# - create a pre- and post- snapshot on logout
# However, systemd-user is a bit weird since it doesn't trigger pam_snapper on logout, and pam_snapper never makes the post-snapshot.
# So we call 'openonly' to make a single snapshot on login.
- name: Enable pam_snapper in systemd-user to create snapshots of /home/{{ user_name }} on login.
  lineinfile:
    path: /etc/pam.d/systemd-user
    line: session  optional pam_snapper.so openonly

- name: Install snap-pac for automatic snapshots.
  pacman:
    name: snap-pac
